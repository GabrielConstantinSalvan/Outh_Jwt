on:
  push:
    branches:
      - main  # Executa o pipeline quando houver um push na branch main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build do projeto com Maven
        run: mvn clean package -DskipTests

      - name: Criar imagem Docker
        run: |
          docker build -t gabrielconstantin830/springboot-outh_jwt:latest .

      - name: Debug Secrets
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
          echo "DOCKER_PASSWORD está definido? $(if [[ -n \"${{ secrets.DOCKER_PASSWORD }}\" ]]; then echo 'SIM'; else echo 'NÃO'; fi)"

      - name: Login no Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Enviar imagem para o Docker Hub
        run: |
          docker tag gabrielconstantin830/springboot-outh_jwt:latest gabrielconstantin830/springboot-outh_jwt:1.0
          docker push gabrielconstantin830/springboot-outh_jwt:1.0

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Só roda depois do job build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar Kubectl e Minikube
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube

      - name: Iniciar Minikube
        run: minikube start --driver=docker

      - name: Aplicar Configurações do Kubernetes
        run: |
          kubectl apply -f msyql-deployment.yml
          kubectl apply -f springboot-deployment.yml

      - name: Expor o serviço
        run: kubectl expose deployment springboot-app --type=LoadBalancer --name=springboot-service
